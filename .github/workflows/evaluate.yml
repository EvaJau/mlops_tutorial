name: Evaluate candidate ML model in PR
on: [issue_comment]

jobs:
  evaluate:
    if: github.event.issue.pull_request != null &&  contains(github.event.comment.body, '/evaluate')
    runs-on: ubuntu-latest
    steps:
      - name: ChatOps For Pull Requests
        uses: machine-learning-apps/actions-chatops@1.41
        with:
          APP_PEM: ${{ secrets.APP_PEM }}
          APP_ID: ${{ secrets.APP_ID }}
          TRIGGER_PHRASE: "/evaluate"
          INDICATOR_LABEL: "evaluation-started"
        env:
          GITHUB_TOKEN: ${{ secrets.MLOPS_TUTORIAL_TOKEN }}
        id: prcomm

      - name: Get PR number
        uses: actions/github-script@v3.0.0
        id: get-pr-number
        with:
          script: |
            const {data: pulls} = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: '${{ github.event.client_payload.ref }}'
            })
            return pulls[0].number
          result-encoding: string

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          issue-number: ${{ steps.get-pr-number.outputs.result }}
          body: |
            I'm kicking off a training job tracked with the [MLflow remote server](${{ secrets.MLFLOW_TRACKING_URI }}).
      
        # This step clones the branch of the PR associated with the triggering phrase, but only if it is triggered.
      - name: clone branch of PR
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/checkout@v2.3.2
        with:
          ref: ${{ steps.prcomm.outputs.SHA }}

      # Set up Python
      - name: Set up Python v3.8.5
        if: steps.prcomm.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.5'

        # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

        # Run mlflow train job
      - name: Run train job
        run: python train_mlflow.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        id: trainjob

      - name: Fetch runs
        uses: alejio/mlflow-tracking-action@v1.1.0
        id: fetch-runs
        with:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          EXPERIMENT_ID: "2"
          BASELINE_RUN_QUERY: "tags.live='1'"
          CANDIDATE_RUN_QUERY: "tags.production_candidate='1'"

      # Let the bot respond
      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          issue-number: ${{ steps.get-pr-number.outputs.result }}
          body: |
            |Model       |MLflow Run ID                                                                                                                                                                                          |S3 Artifact URI                                                                                                                                                                                                                                            |Training Accuracy                                        |Test Accuracy                                           |
            |------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------|--------------------------------------------------------|
            |_Baseline_  |[${{ steps.fetch-runs.outputs.BASELINE_RUNID }}](${{ secrets.MLFLOW_TRACKING_URI }}/#/experiments/${{ steps.fetch-runs.outputs.EXPERIMENT_ID }}/runs/${{ steps.fetch-runs.outputs.BASELINE_RUNID }})   |[${{ steps.fetch-runs.outputs.BASELINE_ARTIFACT_URI }}](https://s3.console.aws.amazon.com/s3/buckets/workshop-mlflow-artifacts/${{ steps.fetch-runs.outputs.EXPERIMENT_ID }}/${{ steps.fetch-runs.outputs.BASELINE_RUNID }}/artifacts/?region=eu-west-2)   |${{ steps.fetch-runs.outputs.BASELINE_TRAIN_ACCURACY }}  |${{ steps.fetch-runs.outputs.BASELINE_TEST_ACCURACY }}  |
            |_Candidate_ |[${{ steps.fetch-runs.outputs.CANDIDATE_RUNID }}](${{ secrets.MLFLOW_TRACKING_URI }}/#/experiments/${{ steps.fetch-runs.outputs.EXPERIMENT_ID }}/runs/${{ steps.fetch-runs.outputs.CANDIDATE_RUNID }}) |[${{ steps.fetch-runs.outputs.CANDIDATE_ARTIFACT_URI }}](https://s3.console.aws.amazon.com/s3/buckets/workshop-mlflow-artifacts/${{ steps.fetch-runs.outputs.EXPERIMENT_ID }}/${{ steps.fetch-runs.outputs.CANDIDATE_RUNID }}/artifacts/?region=eu-west-2) |${{ steps.fetch-runs.outputs.CANDIDATE_TRAIN_ACCURACY }} |${{ steps.fetch-runs.outputs.CANDIDATE_TEST_ACCURACY }} |
            
            #### Results queried from [MLflow Tracking Server](${{ secrets.MLFLOW_TRACKING_URI }}).