name: Deploy candidate model to prod
on: [issue_comment]

jobs:
  deploy-candidate:
    if: github.event.issue.pull_request != null &&  contains(github.event.comment.body, '/deploy-candidate')
    runs-on: ubuntu-latest
    steps:
      - name: ChatOps For Pull Requests
        uses: machine-learning-apps/actions-chatops@1.41
        with:
          APP_PEM: ${{ secrets.APP_PEM }}
          APP_ID: ${{ secrets.APP_ID }}
          TRIGGER_PHRASE: "/deploy-candidate"
          INDICATOR_LABEL: "evaluation-complete"
        env:
          GITHUB_TOKEN: ${{ secrets.MLOPS_TUTORIAL_TOKEN }}
        id: prcomm3
      
      - name: Remove evaluation-started label
        uses: actions-ecosystem/action-remove-labels@v1.0.0
        with:
          github_token: ${{ secrets.github_token }}
          labels: "evaluation-started"

      # This step clones the branch of the PR associated with the triggering phrase, but only if it is triggered.
      - name: clone branch of PR
        if: steps.prcomm3.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/checkout@v2.3.2
        with:
          ref: ${{ steps.prcomm3.outputs.SHA }}

      # Set up Python
      - name: Set up Python v3.8.5
        if: steps.prcomm3.outputs.BOOL_TRIGGERED == 'true'
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.5'

        # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-cli.txt

      - name: Fetch runs
        uses: alejio/mlflow-tracking-action@v1.1.0
        id: fetch-runs
        with:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          EXPERIMENT_ID: "0"
          BASELINE_RUN_QUERY: "tags.live='1'"
          CANDIDATE_RUN_QUERY: "tags.production_candidate='1'"

      - name: Get PR number
        uses: actions/github-script@v3.0.0
        id: get-pr-number
        with:
          script: |
            const {data: pulls} = await github.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: '${{ github.event.client_payload.ref }}'
            })
            return pulls[0].number
          result-encoding: string

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
          issue-number: ${{ steps.get-pr-number.outputs.result }}
          body: |
            I'm deploying the candidate model with run ID [${{ steps.fetch-runs.outputs.CANDIDATE_RUNID }}](${{ secrets.MLFLOW_TRACKING_URI }}/#/experiments/${{ steps.fetch-runs.outputs.EXPERIMENT_ID }}/runs/${{ steps.fetch-runs.outputs.CANDIDATE_RUNID }}) to production.
      
      - name: Overwrite MLFlow run tags
        run: python overwrite_tags.py ${{ steps.fetch-runs.outputs.BASELINE_RUNID }} ${{ steps.fetch-runs.outputs.CANDIDATE_RUNID }}

      - name: Query deployed model 
        run: |
            echo "::set-env name=CURRENTLY_DEPLOYED_MODEL::`python fetch_currently_deployed_model.py`"

      - name: Final Comment
        uses: peter-evans/create-or-update-comment@v1.4.2
        with:
            issue-number: ${{ steps.get-pr-number.outputs.result }}
            body: |
                Candidate model deployed to prod! Run ID in production is [${{ env.CURRENTLY_DEPLOYED_MODEL }}](${{ secrets.MLFLOW_TRACKING_URI }}/#/experiments/${{ env.EXPERIMENT_ID }}/runs/${{ env.CURRENTLY_DEPLOYED_MODEL }}).

      - name: Add deployed label
        uses: actions-ecosystem/action-add-labels@v1.1.0
        with:
          github_token: ${{ secrets.github_token }}
          labels: "deployed"